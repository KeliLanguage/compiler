Result.ok(A Type) fail(B Type) = tags.
    case(.Ok(A))
    case(.Fail(B))

{A Type} {B Type} {C Type}
(this Result.ok(A) fail(B)).then(f Function.in(A) out(C))
    | Result.ok(C) fail(B)
    = this.
        case(.Ok(o)):
            (Result.Ok(f.apply(o)))
        case(.Fail(e)):
            (Result.Fail(e))

Boolean = tags.
    case(.True) 
    case(.False) 

(x Int).==(y Int) = ffi.javascript("k$x === k$y ? k$Boolean.True : k$Boolean.False").as(Boolean)

(this Int).isZero | Result.ok(Int) fail(String) = 
    this.==(0).
        case(.True):
            (Result.Ok(0))
        case(.False):
            (Result.Fail("Not a zero"))
            
= 123.isZero
= 0.isZero 
