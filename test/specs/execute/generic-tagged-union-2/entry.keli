List.of(A Type) = tags.
    case(new)
    case(cons.current(A) next(List.of(A)))

(this Int).+(that Int) = ffi.javascript("k$this + k$that").as(Int)

{A Type}
(this List.of(A)).length | Int = 
    this.
        case(new):
            (0)
        case(cons.next(n)):
            (1.+(n.length))

{A Type}
(xs List.of(A)).add(x A) | List.of(A) = 
    xs.
        case(new):
            (List.cons.current(x) next(List.new))
        case(cons.current(c) next(n)):
            (List.cons.current(c) next(n.add(x)))
    
=List.new.add(1).add(2).add(3).add(4).length